name: Create release
on:
  push:
    branches: [main]

jobs:
  build:
    name: Build release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          install: true
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - id: get-tag
        run: |
          tag=$(echo ${{ github.ref }} | cut -d/ -f3)
          echo "tag=$tag" >> $GITHUB_OUTPUT
      - id: get-version
        run: |
          version=$(echo ${{ steps.get-tag.outputs.tag }} | cut -c 2-)
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Determine Docker tags
        id: tags
        run: |
          function joinWith {
            local IFS="$1"
            shift
            echo "$*"
          }
          
          BASE_IMAGE=fluree/server
          declare -a TAGS
          
          # Tag with version, other kinds of tags, or main
          if [[ $GITHUB_REF =~ ^refs/tags/v[[:digit:]]+ ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            TAGS+="${BASE_IMAGE}:latest"
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            VERSION=main
          fi
          
          if [[ -n $VERSION ]]; then
            TAGS+="${BASE_IMAGE}:${VERSION}"
          fi
          
          # Tag with alphaN, betaN, or rcN if present
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}-(alpha|beta|rc)[0-9]{1,3}$ ]]; then
            TAGS+="${BASE_IMAGE}:${BASH_REMATCH[1]}"
            # TODO: Remove this once we have a stable release
            TAGS+="${BASE_IMAGE}:latest"
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tags=$(joinWith ',' \"${TAGS[@]}\")" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && steps.tags.outputs.tags != '' }}
          tags: ${{ steps.tags.outputs.tags }}
          secrets: |
            GIT_AUTH_TOKEN=${{ github.token }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.tags.outputs.version }}
            org.opencontainers.image.created=${{ steps.tags.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
